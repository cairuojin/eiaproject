<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjsyoung.eiaproject.mapper.ContractMessageMapper">
  <resultMap id="BaseResultMap" type="com.gjsyoung.eiaproject.domain.ContractMessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="entryUserId" jdbcType="INTEGER" property="entryuserid" />
    <result column="contractnumber" jdbcType="VARCHAR" property="contractnumber" />
    <result column="contractsigntime" jdbcType="TIMESTAMP" property="contractsigntime" />
    <result column="contractamount" jdbcType="INTEGER" property="contractamount" />
    <result column="contractannexURL" jdbcType="VARCHAR" property="contractannexurl" />
    <result column="contractmoney" jdbcType="DOUBLE" property="contractmoney" />
    <result column="contractsummary" jdbcType="VARCHAR" property="contractsummary" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, entryUserId, contractnumber, contractsigntime, contractamount, contractannexURL, 
    contractmoney, contractsummary, createTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contractmessage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contractmessage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gjsyoung.eiaproject.domain.ContractMessage">
    insert into contractmessage (id, entryUserId, contractnumber, 
      contractsigntime, contractamount, contractannexURL, 
      contractmoney, contractsummary, createTime
      )
    values (#{id,jdbcType=INTEGER}, #{entryuserid,jdbcType=INTEGER}, #{contractnumber,jdbcType=VARCHAR}, 
      #{contractsigntime,jdbcType=TIMESTAMP}, #{contractamount,jdbcType=INTEGER}, #{contractannexurl,jdbcType=VARCHAR}, 
      #{contractmoney,jdbcType=DOUBLE}, #{contractsummary,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gjsyoung.eiaproject.domain.ContractMessage">
    insert into contractmessage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="entryuserid != null">
        entryUserId,
      </if>
      <if test="contractnumber != null">
        contractnumber,
      </if>
      <if test="contractsigntime != null">
        contractsigntime,
      </if>
      <if test="contractamount != null">
        contractamount,
      </if>
      <if test="contractannexurl != null">
        contractannexURL,
      </if>
      <if test="contractmoney != null">
        contractmoney,
      </if>
      <if test="contractsummary != null">
        contractsummary,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="entryuserid != null">
        #{entryuserid,jdbcType=INTEGER},
      </if>
      <if test="contractnumber != null">
        #{contractnumber,jdbcType=VARCHAR},
      </if>
      <if test="contractsigntime != null">
        #{contractsigntime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractamount != null">
        #{contractamount,jdbcType=INTEGER},
      </if>
      <if test="contractannexurl != null">
        #{contractannexurl,jdbcType=VARCHAR},
      </if>
      <if test="contractmoney != null">
        #{contractmoney,jdbcType=DOUBLE},
      </if>
      <if test="contractsummary != null">
        #{contractsummary,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gjsyoung.eiaproject.domain.ContractMessage">
    update contractmessage
    <set>
      <if test="entryuserid != null">
        entryUserId = #{entryuserid,jdbcType=INTEGER},
      </if>
      <if test="contractnumber != null">
        contractnumber = #{contractnumber,jdbcType=VARCHAR},
      </if>
      <if test="contractsigntime != null">
        contractsigntime = #{contractsigntime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractamount != null">
        contractamount = #{contractamount,jdbcType=INTEGER},
      </if>
      <if test="contractannexurl != null">
        contractannexURL = #{contractannexurl,jdbcType=VARCHAR},
      </if>
      <if test="contractmoney != null">
        contractmoney = #{contractmoney,jdbcType=DOUBLE},
      </if>
      <if test="contractsummary != null">
        contractsummary = #{contractsummary,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gjsyoung.eiaproject.domain.ContractMessage">
    update contractmessage
    set entryUserId = #{entryuserid,jdbcType=INTEGER},
      contractnumber = #{contractnumber,jdbcType=VARCHAR},
      contractsigntime = #{contractsigntime,jdbcType=TIMESTAMP},
      contractamount = #{contractamount,jdbcType=INTEGER},
      contractannexURL = #{contractannexurl,jdbcType=VARCHAR},
      contractmoney = #{contractmoney,jdbcType=DOUBLE},
      contractsummary = #{contractsummary,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>