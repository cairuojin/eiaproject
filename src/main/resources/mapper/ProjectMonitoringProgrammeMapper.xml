<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjsyoung.eiaproject.mapper.ProjectMonitoringProgrammeMapper">
  <resultMap id="BaseResultMap" type="com.gjsyoung.eiaproject.domain.ProjectMonitoringProgramme">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="monitoringUserId" jdbcType="INTEGER" property="monitoringuserid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="designatedPerson" jdbcType="VARCHAR" property="designatedperson" />
    <result column="monitoringprogramme" jdbcType="VARCHAR" property="monitoringprogramme" />
    <result column="annux" jdbcType="VARCHAR" property="annux" />
  </resultMap>
  <sql id="Base_Column_List">
    id, monitoringUserId, createTime, designatedPerson, monitoringprogramme, annux
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from projectmonitoringprogramme
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from projectmonitoringprogramme
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gjsyoung.eiaproject.domain.ProjectMonitoringProgramme">
    insert into projectmonitoringprogramme (id, monitoringUserId, createTime, 
      designatedPerson, monitoringprogramme, 
      annux)
    values (#{id,jdbcType=INTEGER}, #{monitoringuserid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{designatedperson,jdbcType=VARCHAR}, #{monitoringprogramme,jdbcType=VARCHAR}, 
      #{annux,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gjsyoung.eiaproject.domain.ProjectMonitoringProgramme">
    insert into projectmonitoringprogramme
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="monitoringuserid != null">
        monitoringUserId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="designatedperson != null">
        designatedPerson,
      </if>
      <if test="monitoringprogramme != null">
        monitoringprogramme,
      </if>
      <if test="annux != null">
        annux,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="monitoringuserid != null">
        #{monitoringuserid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="designatedperson != null">
        #{designatedperson,jdbcType=VARCHAR},
      </if>
      <if test="monitoringprogramme != null">
        #{monitoringprogramme,jdbcType=VARCHAR},
      </if>
      <if test="annux != null">
        #{annux,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gjsyoung.eiaproject.domain.ProjectMonitoringProgramme">
    update projectmonitoringprogramme
    <set>
      <if test="monitoringuserid != null">
        monitoringUserId = #{monitoringuserid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="designatedperson != null">
        designatedPerson = #{designatedperson,jdbcType=VARCHAR},
      </if>
      <if test="monitoringprogramme != null">
        monitoringprogramme = #{monitoringprogramme,jdbcType=VARCHAR},
      </if>
      <if test="annux != null">
        annux = #{annux,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gjsyoung.eiaproject.domain.ProjectMonitoringProgramme">
    update projectmonitoringprogramme
    set monitoringUserId = #{monitoringuserid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      designatedPerson = #{designatedperson,jdbcType=VARCHAR},
      monitoringprogramme = #{monitoringprogramme,jdbcType=VARCHAR},
      annux = #{annux,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>